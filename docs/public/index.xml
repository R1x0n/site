<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R1x0n</title>
    <link>https://r1x0n.github.io/site/</link>
    <description>Recent content on R1x0n</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Dec 2021 11:44:31 +0100</lastBuildDate><atom:link href="https://r1x0n.github.io/site/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Certifications</title>
      <link>https://r1x0n.github.io/site/certifications/</link>
      <pubDate>Sat, 11 Dec 2021 15:13:24 +0100</pubDate>
      
      <guid>https://r1x0n.github.io/site/certifications/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Shell Code</title>
      <link>https://r1x0n.github.io/site/pages/cyber-challenge/shell-code/</link>
      <pubDate>Thu, 02 Dec 2021 11:44:31 +0100</pubDate>
      
      <guid>https://r1x0n.github.io/site/pages/cyber-challenge/shell-code/</guid>
      <description>Goal of the exercise Have a shell and print the contents of the flag file.
Research And Reverse Engineering Test See if there are any protections: I see it with &amp;ldquo;checksec&amp;rdquo; command:
Apparently the program has no protection. What the program uses: I see it with &amp;ldquo;ltrace&amp;rdquo; command: I want to know more about &amp;ldquo;puts&amp;rdquo; and &amp;ldquo;read&amp;rdquo;: Decompiled C code: main():
int __cdecl main(int argc, const char **argv, const char **envp) { setvbuf(stdin, 0, 2, 0); setvbuf(stdout, 0, 2, 0); puts( &amp;#34; _________.</description>
    </item>
    
    <item>
      <title>Defl8</title>
      <link>https://r1x0n.github.io/site/posts/defl8/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://r1x0n.github.io/site/posts/defl8/</guid>
      <description>In this post, I want to speak about a project that I made as a semester-work for the ‚ÄúAlgorithms and data structures‚Äù module in SUPSI. I worked on this project with Ignacio Utrilla, which I want to thanks for all the work and the effort he put into this project.
If you are interested to see the project‚Äôs repository on GitHub click here! üò∫
Project‚Äôs goal The initial delivery of this project was to build in C language a compressor and decompressor using the DEFLATE algorithm, which combines the Huffman algorithm with that of the LZ77.</description>
    </item>
    
    <item>
      <title>Magic - HackTheBox</title>
      <link>https://r1x0n.github.io/site/posts/magic/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://r1x0n.github.io/site/posts/magic/</guid>
      <description>Become User ‚Äî- Enumeration ‚Äî- The first thing that I do is scan for the opened ports:
nmap -sC -sV -oA nmap 10.10.10.185 This command returns me the following result:
# Nmap 7.80 scan initiated Sun May 31 22:17:52 2020 as: nmap -sV -sC -oA nmap 10.10.10.185 Nmap scan report for 10.10.10.185 Host is up (0.044s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.</description>
    </item>
    
    <item>
      <title>In The Cyber</title>
      <link>https://r1x0n.github.io/site/posts/itc/</link>
      <pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r1x0n.github.io/site/posts/itc/</guid>
      <description>InTheCyber is a company with the aim of increasing the real effectiveness of defense systems adopted by companies to protect their information assets and their strategic assets, so it boasts an excellent team both in the Offensive and in Defensive Security.
I spent a lot of time at ITC in close contact with the Offensive team, or even ‚ÄúRED‚Äù. With them, I solved several challenges found on the net, but the real added value was being able to do it with the method that real Pentesters use.</description>
    </item>
    
    <item>
      <title>Easy Leak</title>
      <link>https://r1x0n.github.io/site/pages/cyber-challenge/easy-leak/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r1x0n.github.io/site/pages/cyber-challenge/easy-leak/</guid>
      <description>Goal of the exercise Have the program to print the contents of the flag file.
Research And Reverse Engineering Test See if there are any protections: It appears to be only ‚ÄúNX‚Äù enabled.
Decompiled C code of the executable: int __cdecl __noreturn main(int argc, const char **argv, const char **envp) { FILE *stream; // [rsp+0h] [rbp-50h]  char s1; // [rsp+10h] [rbp-40h]  char *s; // [rsp+30h] [rbp-20h]  const char *v6; // [rsp+38h] [rbp-18h]  const char *v7; // [rsp+40h] [rbp-10h]  unsigned __int64 v8; // [rsp+48h] [rbp-8h]  v8 = __readfsqword(0x28u); memset(&amp;amp;s1, 0, 0x38uLL); s = &amp;#34;[!</description>
    </item>
    
    <item>
      <title>Cyber Challenge</title>
      <link>https://r1x0n.github.io/site/posts/cyber-challenge/cyber-challenge/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://r1x0n.github.io/site/posts/cyber-challenge/cyber-challenge/</guid>
      <description>Cyber Challenge, 3-month course in which we received a ‚Äútraining‚Äù on various topics of computer security. Cyberchallenge is an event that is brought to the national level, it is also found in Switzerland, the focus is to find the best guys in this field but also to present it to the less experienced.
How the Cyber Challenge is structured Cyber ‚Äã‚ÄãChallenge is divided into lessons, every Friday from 2:00 pm to 8:00 pm at the Polytechnic University of Milan, for a total of 72 hours.</description>
    </item>
    
  </channel>
</rss>
